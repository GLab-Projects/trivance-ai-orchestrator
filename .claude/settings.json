{
  "env": {
    "TRIVANCE_ENV": "local"
  },
  "permissions": {
    "defaultMode": "acceptEdits",
    "allow": [
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(git log *)",
      "Bash(git status *)",
      "Bash(git diff *)",
      "Bash(git show *)",
      "Bash(npm run *)",
      "Bash(npm test *)",
      "Bash(npm install)",
      "Bash(yarn *)",
      "Bash(pnpm *)",
      "Bash(node *)",
      "Bash(python *)",
      "Bash(python3 *)",
      "Bash(pip *)",
      "Bash(docker ps *)",
      "Bash(docker logs *)",
      "Bash(docker compose *)",
      "Bash(kubectl get *)",
      "Bash(kubectl describe *)",
      "Bash(curl *)",
      "Bash(wget *)",
      "Bash(find *)",
      "Bash(grep *)",
      "Bash(rg *)",
      "Bash(ls *)",
      "Bash(cat *)",
      "Bash(head *)",
      "Bash(tail *)",
      "Bash(mkdir *)",
      "Bash(touch *)",
      "Bash(mv *)",
      "Bash(cp *)",
      "Bash(chmod +x *)",
      "Bash(ps *)",
      "Bash(lsof *)",
      "Bash(cd *)",
      "Bash(diff *)",
      "Bash(echo *)",
      "Bash(pwd *)",
      "Bash(which *)",
      "Bash(whoami *)",
      "mcp__github__get_pull_request",
      "mcp__github__get_pull_request_comments",
      "mcp__github__get_issue_comments",
      "Bash(gh auth status)",
      "Bash(gh pr create --base * --title * --body *)",
      "Bash(gh pr view *)",
      "Bash(gh pr list *)",
      "Bash(gh issue create --title * --body * --label *)",
      "Bash(gh issue list *)",
      "Bash(gh api repos/:owner/:repo/pulls/*/reviews)",
      "Bash(gh api repos/:owner/:repo/pulls/*/comments)",
      "Bash(gh api repos/:owner/:repo/issues/*/comments)",
      "Bash(git push origin feature/* bugfix/* hotfix/*)",
      "Bash(git push origin --set-upstream feature/* bugfix/* hotfix/*)",
      "Bash(mkdir -p .claude/logs/*)",
      "Bash(jq *)"
    ],
    "deny": [
      "Bash(*)",
      "Bash(rm *)",
      "Bash(sudo *)",
      "Bash(git push --force *)",
      "Bash(git push -f *)",
      "Bash(git reset --hard *)",
      "Bash(git clean -fd *)",
      "Write(/etc/**)",
      "Write(~/.ssh/**)",
      "Write(~/.gnupg/**)",
      "Edit(/etc/**)",
      "Edit(~/.ssh/**)",
      "Edit(~/.gnupg/**)",
      "Bash(nc *)",
      "Bash(netcat *)",
      "Bash(nmap *)",
      "Write(/bin/**)",
      "Write(/sbin/**)",
      "Write(/usr/bin/**)",
      "Write(/usr/sbin/**)",
      "Bash(mv * /dev/null)",
      "Bash(dd *)",
      "Bash(ssh *)",
      "Bash(scp *)",
      "Bash(npm install -g *)",
      "Bash(kill *)",
      "Bash(killall *)",
      "Bash(chmod 777 *)",
      "Bash(chmod -R *)"
    ]
  },
  "cleanupPeriodDays": 30,
  "enableAllProjectMcpServers": true,
  "hooks": {
    "UserPromptSubmit": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "python3 \"$CLAUDE_PROJECT_DIR/.claude/hooks/prompt_router.py\"",
            "timeout": 10
          }
        ]
      }
    ],
    "PreToolUse": [
      {
        "matcher": "Write|Edit|MultiEdit|Bash|WebFetch|WebSearch|Task",
        "hooks": [
          {
            "type": "command",
            "command": "python3 \"$CLAUDE_PROJECT_DIR/.claude/hooks/pretool_guard.py\"",
            "timeout": 30
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "python3 \"$CLAUDE_PROJECT_DIR/.claude/hooks/architecture_enforcer.py\"",
            "timeout": 15
          }
        ]
      } 
    ],
    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "python3 \"$CLAUDE_PROJECT_DIR/.claude/hooks/on_stop.py\" main",
            "timeout": 20
          }
        ]
      }
    ],
    "SubagentStop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "python3 \"$CLAUDE_PROJECT_DIR/.claude/hooks/on_stop.py\" subagent",
            "timeout": 20
          }
        ]
      }
    ]
  }
}

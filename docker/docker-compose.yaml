version: '3.8'

networks:
  trivance_network:
    driver: bridge

volumes:
  postgres_data:
  mongo_data:

services:
  # Database services
  postgres:
    image: postgres:15-alpine
    container_name: trivance_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=trivance_development
      - POSTGRES_USER=trivance_dev
      - POSTGRES_PASSWORD=trivance_dev_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - trivance_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trivance_dev -d trivance_development"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:7-jammy
    container_name: trivance_mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE=trivance_auth_development
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - trivance_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Application services
  ms_level_up_management:
    build:
      context: ../../ms_level_up_management
      dockerfile: ../trivance-dev-config/docker/Dockerfile.ms_level_up_management
    container_name: trivance_management
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file:
      - .env.docker-local
    environment:
      # Forzar configuración crítica
      - NODE_ENV=production
      - PORT=3000
      
    networks:
      - trivance_network
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "sh", "-c", "timeout 3 bash -c 'cat < /dev/null > /dev/tcp/localhost/3000' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  ms_trivance_auth:
    build:
      context: ../../ms_trivance_auth
      dockerfile: ../trivance-dev-config/docker/Dockerfile.ms_trivance_auth
    container_name: trivance_auth
    restart: unless-stopped
    ports:
      - "3001:3001"
    env_file:
      - .env.docker-auth-local
    environment:
      # Forzar configuración crítica
      - NODE_ENV=production
      - PORT=3001
      
    networks:
      - trivance_network
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "sh", "-c", "timeout 3 bash -c 'cat < /dev/null > /dev/tcp/localhost/3001' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

#!/bin/bash
# üì± Script para verificar integraci√≥n Docker + Mobile

set -euo pipefail

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
WORKSPACE_DIR="$(cd "${SCRIPT_DIR}/../../.." && pwd)"

# Colores
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m'

echo "üîç Verificando integraci√≥n Docker + App M√≥vil"
echo "=============================================="

# 1. Verificar Docker
echo -e "\n${BLUE}1. Verificando Docker:${NC}"
if docker ps &>/dev/null 2>&1; then
    echo -e "  ${GREEN}‚úÖ Docker est√° corriendo${NC}"
    
    # Verificar contenedores espec√≠ficos
    if docker ps | grep -q "postgres"; then
        echo -e "  ${GREEN}‚úÖ PostgreSQL est√° corriendo${NC}"
    else
        echo -e "  ${RED}‚ùå PostgreSQL NO est√° corriendo${NC}"
    fi
    
    if docker ps | grep -q "mongodb"; then
        echo -e "  ${GREEN}‚úÖ MongoDB est√° corriendo${NC}"
    else
        echo -e "  ${RED}‚ùå MongoDB NO est√° corriendo${NC}"
    fi
    
    if docker ps | grep -q "ms_level_up_management"; then
        echo -e "  ${GREEN}‚úÖ Management API est√° corriendo${NC}"
    else
        echo -e "  ${RED}‚ùå Management API NO est√° corriendo${NC}"
    fi
    
    if docker ps | grep -q "ms_trivance_auth"; then
        echo -e "  ${GREEN}‚úÖ Auth Service est√° corriendo${NC}"
    else
        echo -e "  ${RED}‚ùå Auth Service NO est√° corriendo${NC}"
    fi
else
    echo -e "  ${RED}‚ùå Docker no est√° corriendo o no est√° instalado${NC}"
    exit 1
fi

# 2. Verificar APIs
echo -e "\n${BLUE}2. Verificando APIs:${NC}"
if curl -s http://localhost:3000/health &>/dev/null; then
    echo -e "  ${GREEN}‚úÖ Management API responde en http://localhost:3000${NC}"
else
    echo -e "  ${RED}‚ùå Management API NO responde${NC}"
fi

if curl -s http://localhost:3001/api-docs &>/dev/null; then
    echo -e "  ${GREEN}‚úÖ Auth Service responde en http://localhost:3001${NC}"
else
    echo -e "  ${RED}‚ùå Auth Service NO responde${NC}"
fi

# 3. Verificar configuraci√≥n Mobile
echo -e "\n${BLUE}3. Verificando configuraci√≥n Mobile:${NC}"
MOBILE_DIR="${WORKSPACE_DIR}/trivance-mobile"

if [[ -d "$MOBILE_DIR" ]]; then
    echo -e "  ${GREEN}‚úÖ Directorio mobile existe${NC}"
    
    # Verificar archivos de configuraci√≥n
    if [[ -f "$MOBILE_DIR/src/environments/env.local.ts" ]]; then
        echo -e "  ${GREEN}‚úÖ env.local.ts existe${NC}"
        
        # Verificar URLs correctas
        if grep -q "http://localhost:3000" "$MOBILE_DIR/src/environments/env.local.ts"; then
            echo -e "  ${GREEN}‚úÖ URL de Management API correcta${NC}"
        else
            echo -e "  ${RED}‚ùå URL de Management API incorrecta${NC}"
        fi
        
        if grep -q "http://localhost:3001" "$MOBILE_DIR/src/environments/env.local.ts"; then
            echo -e "  ${GREEN}‚úÖ URL de Auth Service correcta${NC}"
        else
            echo -e "  ${RED}‚ùå URL de Auth Service incorrecta${NC}"
        fi
    else
        echo -e "  ${RED}‚ùå env.local.ts NO existe${NC}"
    fi
    
    # Verificar .env.local
    if [[ -f "$MOBILE_DIR/.env.local" ]]; then
        echo -e "  ${GREEN}‚úÖ .env.local existe${NC}"
        
        if grep -q "ENV_LOCAL=true" "$MOBILE_DIR/.env.local"; then
            echo -e "  ${GREEN}‚úÖ ENV_LOCAL est√° configurado correctamente${NC}"
        else
            echo -e "  ${YELLOW}‚ö†Ô∏è  ENV_LOCAL no est√° en true${NC}"
        fi
    else
        echo -e "  ${YELLOW}‚ö†Ô∏è  .env.local NO existe (usar npm run start:docker)${NC}"
    fi
    
    # Verificar scripts en package.json
    if grep -q "start:docker" "$MOBILE_DIR/package.json"; then
        echo -e "  ${GREEN}‚úÖ Script start:docker est√° disponible${NC}"
    else
        echo -e "  ${RED}‚ùå Script start:docker NO est√° disponible${NC}"
    fi
else
    echo -e "  ${RED}‚ùå Directorio mobile NO existe${NC}"
fi

# 4. Instrucciones finales
echo -e "\n${BLUE}4. Pr√≥ximos pasos:${NC}"
echo "  1. cd $MOBILE_DIR"
echo "  2. npm install (si no lo has hecho)"
echo "  3. npm run start:docker"
echo "  4. Escanea el QR con Expo Go"
echo ""
echo -e "${YELLOW}üí° Consejos:${NC}"
echo "  - El banner debe mostrar: üéõÔ∏è LOCAL DOCKER | üì° localhost:3000"
echo "  - Si usas Android Emulator, cambia localhost por 10.0.2.2"
echo "  - Para iOS f√≠sico, usa la IP de tu m√°quina en la red"

echo -e "\n${GREEN}‚úÖ Verificaci√≥n completa${NC}"